#!/bin/bash

# Match Dirty Sea colours
PROMPT_USER_COLOR=$(tput setaf 55)         # purple
PROMPT_PREPOSITION_COLOR=$(tput setaf 0)   # black
PROMPT_DEVICE_COLOR=$(tput setaf 19)       # blue
PROMPT_DIR_COLOR=$(tput setaf 24)          # cyan
PROMPT_GIT_STATUS_COLOR=$(tput setaf 22)   # green
PROMPT_GIT_PROGRESS_COLOR=$(tput setaf 88) # red
PROMPT_SYMBOL_COLOR=$(tput setaf 11)       # grey

# Match onedark colours
# PROMPT_USER_COLOR=$(tput setaf 13)         # purple
# PROMPT_PREPOSITION_COLOR=$(tput setaf 7)   # lightgrey
# PROMPT_DEVICE_COLOR=$(tput setaf 12)       # blue
# PROMPT_DIR_COLOR=$(tput setaf 14)          # cyan
# PROMPT_GIT_STATUS_COLOR=$(tput setaf 10)   # green
# PROMPT_GIT_PROGRESS_COLOR=$(tput setaf 9)  # red
# PROMPT_SYMBOL_COLOR=$(tput setaf 8)        # grey

if [[ $HOSTNAME == ip-172* ]]
then
    PROMPT_DEVICE_COLOR=$(tput setaf 9)      # red
fi
source ~/dotfiles/bash/sexy-prompt.sh

# The following is normally defined in /etc/profile.d/vte.sh on Fedora,
# but wont exists in our Ubuntu shells
if [[ -z $(type -t __vte_prompt_command) ]];
then
    __vte_urlencode() (
        # This is important to make sure string manipulation is handled
        # byte-by-byte.
        LC_ALL=C
        str="$1"
        while [ -n "$str" ]; do
            safe="${str%%[!a-zA-Z0-9/:_\.\-\!\'\(\)~]*}"
            printf "%s" "$safe"
            str="${str#"$safe"}"
            if [ -n "$str" ]; then
            printf "%%%02X" "'$str"
            str="${str#?}"
            fi
        done
    )

    __vte_osc7 () {
        printf "\033]7;file://%s%s\007" "${HOSTNAME:-}" "$(__vte_urlencode "${PWD}")"
    }

    __vte_prompt_command() {
        local command=$(HISTTIMEFORMAT= history 1 | sed 's/^ *[0-9]\+ *//')
        command="${command//;/ }"
        local pwd='~'
        [ "$PWD" != "$HOME" ] && pwd=${PWD/#$HOME\//\~\/}
        printf "\033]777;notify;Command completed;%s\007\033]0;%s@%s:%s\007%s" "${command}" "${USER}" "${HOSTNAME%%.*}" "${pwd}" "$(__vte_osc7)"
    }

    PROMPT_COMMAND="__vte_prompt_command;"$PROMPT_COMMAND
fi
