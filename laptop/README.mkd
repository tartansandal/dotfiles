# Notes on setting up a fresh laptop

Ensure focus follows mouse:

    gsettings set org.gnome.desktop.wm.preferences focus-mode mouse

Install yum repositories:

    sudo rsync -rv ./etc/ /etc/

Enable some `COPR` repositories:

    sudo dnf copr enable atim/lazygit -y

Install packages in `packages-install` file

    sudo dnf install `grep -v '^#\|^$' packages-install`

Integrate application data from `rpmfusion:`

    sudo dnf group upgrade core

Remove unused packages:

    sudo dnf remove \
      plocate       \
      gnome-boxes   \
      libreoffice*

Install Flatpacks

    # by-pass `fedora-flatpack-filter`.
    flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo

    flatpak install io.dbeaver.DBeaverCommunity
    flatpak install io.dbeaver.DBeaverCommunity.Client.mariadb
    flatpak install io.dbeaver.DBeaverCommunity.Client.pgsql
    flatpak install com.mattjakeman.ExtensionManager

    flatpak install com.rafaelmardojai.Blanket
    flatpak install ca.desrt.dconf-editor
    flatpak install com.uploadedlobster.peek
    flatpak install us.zoom.Zoom
    flatpak install io.github.congard.qnvsm

Log out and back in before running these, or at least

    source ~/.bash_profile

## Emoji and Special characters?

First remember you have `CapsLock` key mapped to "compose" so that `CapsLock + c + ,`
gives `รง`. See the `Multi-Key` entries in `/usr/share/X11/locale/en_US.UTF-8/Compose` for
more examples.

Okay, found a chrome extension that seems to be working.

## `flameshot`

To bind print-screen to `flameshot` ...

Go to `Settings > Keyboard > View` and Customize Shortcuts.

Search for "Print". If not set to "Flameshot", select the "Print" binding then
hit "backspace" to disable. Then add a new Custom Shortcut for `flameshot gui`
and bind that to the "Print" key.

## `docker`

Add myself to the `docker` group

    sudo dnf install docker-ce
    sudo systemctl enable --now docker
    sudo usermod -aG docker $(whoami)
    newgrp docker

## `ffmpeg`

Needed for ACC and mpg4

    sudo dnf -y install https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm
    sudo dnf -y install https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$(rpm -E %fedora).noarch.rpm
    sudo dnf install ffmpeg

## Increase grub prompt fonts

Add the following lines to `/etc/default/grub`

    GRUB_FONT=/boot/efi/EFI/fedora/fonts/LiberationMono36.pf2
    GRUB_TERMINAL_OUTPUT="gfxterm"

Then run

    sudo mkdir /boot/efi/EFI/fedora/fonts/
    sudo grub2-mkfont --output=/boot/efi/EFI/fedora/fonts/LiberationMono48.pf2 --size=48 /usr/share/fonts/liberation-mono/LiberationMono-Regular.ttf
    sudo grub2-mkconfig -o /boot/efi/EFI/fedora/grub.cfg

After grub the font size can be set via `/etc/vconsole.conf` and by altering the
default command line to set `vconsole.font` to something bigger like `ter-132n`.
Then run:

    sudo grub2-mkconfig -o /boot/efi/EFI/fedora/grub.cfg
    sudo dracut -f

## Hardware acceleration

I think my laptop is what is called Optimus with the dual Nvidia/Intel video.

Despite all this I won't get hardware acceleration under Firefox yet. :(
I think I really need WebGL.

Can get it to work if I disable NVIDIA with

    __NV_PRIME_RENDER_OFFLOAD=0 firefox

> Run Firefox and force enable `VA-API` as it's disabled on NVIDIA by default. Go
> to `about:config` page and set `media.ffmpeg.vaapi.enabled` to true.
> Run Firefox with `NVD_BACKEND=direct MOZ_DISABLE_RDD_SANDBOX=1` env variables.

Websites with information about this:

- <about:support> (Firefox)
- <https://fedoraproject.org/wiki/Firefox_Hardware_acceleration>
- <https://rpmfusion.org/Howto/NVIDIA>
- <https://webglreport.com/>

Checking GPU support

    glxinfo | grep "profile version"
    eglinfo | grep version
    vainfo

Need OpenGL >= 3.2 or GLES >= 3.0

Maybe need:

    intel-media-driver \
    libva-intel-hybrid-driver \
    nvidia-gpu-firmware

## Auto unlock secret thumb drive

```
mkdir /secret
```

To ensure the keys are mounted at boot (for reboot to install)
add the following to `/etc/crypttab`

```text
secret UUID=44b7c449-b63e-4e47-874c-65f7a39cab16 none nofail,timeout=1ms
```

And add the following to `/etc/fstab`

```text
/dev/mapper/secret /etc/pki/akmods/  ext4 defaults,nofail,nosuid,nodev,relatime 0 0
```

Then reboot to ensure thumb drive is mounted on `/etc/pki/akmods`

## Nvidia drivers with RPMFusion

Install the meta-package

    sudo dnf install kmod-nvidia

Ensure the following are installed:

    sudo dnf install \
      akmod-nvidia                    \
      nvidia-modprobe                 \
      nvidia-settings                 \
      xorg-x11-drv-nvidia             \
      xorg-x11-drv-nvidia-kmodsrc     \
      xorg-x11-drv-nvidia-libs        \

Some extras?

    sudo dnf install \
      nvidia-gpu-firmware             \
      nvidia-persistenced             \
      nvidia-vaapi-driver             \
      xorg-x11-drv-nvidia-cuda
      xorg-x11-drv-nvidia-cuda-libs   \
      xorg-x11-drv-nvidia-power

Then mount the Module Signing thumb drive and run the `resign-nvidia.sh` script.

To force a rebuild run:

    sudo akmods --rebuild

May need either of these temporary workarounds:

    echo "GSK_RENDERER = NGL" | sudo tee -a /etc/environment
    echo "DRI_PRIME=1" | sudo tee -a /etc/environment

### Optimus PRIME GPU offloading

Ref: <https://wiki.archlinux.org/title/PRIME>

Install:

    vulkan
    swticheroo-control

To manually run with the Nvidia GPU:

    __NV_PRIME_RENDER_OFFLOAD=1 __GLX_VENDOR_LIBRARY_NAME=nvidia command

Or use the `switcheroo` service:

> GNOME will respect the `PrefersNonDefaultGPU` property in the desktop
> entry. Alternatively, you can launch applications with GPU by right clicking
> on the icon and choosing Launch using Discrete Graphics Card.

### Real-time audio for `guitarix` and `ardour`

    sudo dnf install realtime-setup.x86_64

And ensure you are in both the `audio` and `realtime` groups

    sudo usermod -a -G audio,realtime kal
    newgrp audio
    newgrp realtime

## Doist

Hosts updates:

    {
        echo "127.0.0.1   elasticmq.local redis.local"
        echo "127.0.0.1   local.todoist.com local.twist.com local.mailhog.com"
    } | sudo tee -a /etc/hosts

Use `dev` CA for local.todoist.com:

    sudo trust anchor --store path/to/ide-tools/traefik/ssl/rootCA.pem

## GitHub CLI

    sudo dnf install 'dnf-command(config-manager)'
    sudo dnf config-manager \
        --add-repo https://cli.github.com/packages/rpm/gh-cli.repo
    sudo dnf install gh
