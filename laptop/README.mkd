# Notes on setting up a fresh laptop

Install yum repos etc

    sudo rsync -rv ./etc/ /etc/

Install packages in `packages-install` file

    sudo dnf install `grep -v '^#\|^$' packages-install`

Integrate app data from rpmfusion:

    sudo dnf groupupdate core


Install flatpacks

```console
# by-pass `fedora-flatpack-filter`.
flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo

flatpak install io.dbeaver.DBeaverCommunity
flatpak install io.dbeaver.DBeaverCommunity.Client.mariadb
flatpak install io.dbeaver.DBeaverCommunity.Client.pgsql
flatpak install com.mattjakeman.ExtensionManager

flatpak install com.rafaelmardojai.Blanket
flatpak install ca.desrt.dconf-editor
flatpak install com.uploadedlobster.peek
flatpak install us.zoom.Zoom
```

Log out and back in before running these, or at least

    source ~/.bash_profile

and perhaps creating the .local/ directories

Think much of this is now covered by CoC and lsp

    npm install -g eslint
    npm install -g babel-eslint
    npm install -g eslint-plugin-react
    npm install -g js-beautify

    pip install --user `cat pips`
    gem install `cat gems`

## Emoji and Special characters?

First remember you have capslock maped to "compose" so that `CapsLock + c + ,`
gives  `รง`.  See the `Multi-Key` entries in
/usr/share/X11/locale/en_US.UTF-8/Compose for more examples.

Can do this via the Typing Booster input method (see
<https://opensource.com/article/19/10/how-type-emoji-linux>).

To toggle input methods use `Super + space`.  But this does not help for input
in chrome under wayland.

Okay, found a chrome extension that seems to be working.

## Flameshot

To bind print-screen to flameshot ...

Goto `Settings > Keyboard > View` and Customize Shortcuts.

Search for "Print". If not set to "Flameshot", select the "Print" binding then
hit "backspace" to disable. Then add a new Custom Shortcut for  "flameshot gui"
and bind that to the "Print" key.

## docker

Add myself to the `docker` group

    sudo dnf install docker-ce
    sudo systemctl enable --now docker
    sudo usermod -aG docker $(whoami)

## Pyenv

May not need this for Fedora 36

See <https://github.com/pyenv/pyenv>

Need extra packages:

    sudo dnf install        \
        bzip2-devel         \
        libffi-devel        \
        openssl-devel       \
        readline-devel      \
        sqlite-devel        \
        xz-devel            \
        ncurses-c++-libs    \
        ncurses-devel

Update pip for each version

    for VERSION in $(pyenv versions --bare)
    do
        pyenv shell ${VERSION}
        pip install --upgrade pip
    done

## ffmpeg

for ACC and mpg4

    sudo dnf -y install https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm
    sudo dnf -y install https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$(rpm -E %fedora).noarch.rpm
    sudo dnf install ffmpeg

## Increase grub prompt fonts

Add the following lines to `/etc/default/grub`

    GRUB_FONT=/boot/efi/EFI/fedora/fonts/LiberationMono36.pf2
    GRUB_TERMINAL_OUTPUT="gfxterm"

then run

    sudo mkdir /boot/efi/EFI/fedora/fonts/
    sudo grub2-mkfont --output=/boot/efi/EFI/fedora/fonts/LiberationMono48.pf2 --size=48 /usr/share/fonts/liberation-mono/LiberationMono-Regular.ttf
    sudo grub2-mkconfig -o /boot/efi/EFI/fedora/grub.cfg

After grub the fontsize can be set via `/etc/vconsole.conf` and by altering the
default command line to set `vconsole.font` to something bigger like `ter-132n`.
Then run:

    sudo grub2-mkconfig -o /boot/efi/EFI/fedora/grub.cfg
    sudo dracut -f

## Hardware acceleration

I think my laptop is what is called Optimus with the dual Nvidia/Intel video.

Despite all this I won't get harware accelleration under Firefox yet. :(
I think I really need WebGL.

Can get it to work if I disable NVIDIA with

    __NV_PRIME_RENDER_OFFLOAD=0 firefox

> Run Firefox and force enable VA-API as it's disabled on NVIDIA by default. Go
> to about:config page and set media.ffmpeg.vaapi.enabled to true.
> Run Firefox with NVD_BACKEND=direct MOZ_DISABLE_RDD_SANDBOX=1 env variables.

Websites with information about this:

* <about:support> (Firefox)
* <https://fedoraproject.org/wiki/Firefox_Hardware_acceleration>
* <https://rpmfusion.org/Howto/NVIDIA>
* <https://webglreport.com/>

Checking GPU support

    glxinfo | grep "profile version"
    eglinfo | grep version
    vainfo

Need OpenGL >= 3.2 or GLES >= 3.0

Maybe need:

    intel-media-driver
    libva-intel-hybrid-driver

MOZ_ENABLE_WAYLAND=0 ./firefox
## Auto unlock secret thumbdrive

```
mkdir /secret
```

To ensure the keys are mounted at boot (for reboot to install)
add the following to `/etc/crypttab`

```text
secret UUID=986e470b-e870-435e-85d0-c96e881e9699 none nofail,timeout=1ms
```

And add the following to `/etc/fstab`

```text
/dev/mapper/secret	/etc/pki/akmods/ 	ext4 defaults,nofail,nosuid,nodev,relatime 0 0
```

Then reboot to ensure thumbdrive is mounted on `/etc/pki/akmods`


## Nvidia drivers with RPMFusion

Install the metapackage

    sudo dnf install kmod-nvidia

Ensure the following are installed:

    akmod-nvidia                    \
    nvidia-settings                 \
    xorg-x11-drv-nvidia             \
    xorg-x11-drv-nvidia-kmodsrc     \
    xorg-x11-drv-nvidia-libs        \
    xorg-x11-drv-nvidia-cuda-libs   \
    xorg-x11-drv-nvidia-power

Some extras?

    nvidia-gpu-firmware         \
    nvidia-persistenced         \
    nvidia-vaapi-driver         \
    xorg-x11-drv-nvidia-cuda

Then mount the Module Signing thumbdrive and run the `resign-nvidia.sh` script.


To force a rebuild run (as normal user):

    akmodsbuild /usr/src/akmods/nvidia-kmod.latest

### Optimus PRIME GPU offloading

Ref: https://wiki.archlinux.org/title/PRIME

Install:

    vulkan
    swticheroo-control

To manually run with the nvidia gpu:

    __NV_PRIME_RENDER_OFFLOAD=1 __GLX_VENDOR_LIBRARY_NAME=nvidia command

Or use the switcheroo service:

> GNOME will respect the PrefersNonDefaultGPU property in the desktop
> entry. Alternatively, you can launch applications with GPU by right clicking
> on the icon and choosing Launch using Discrete Graphics Card. 

### Realtime audio for guitarix and ardour

install realtime-setup.x86_64

ensure you are in both the audio and realtime groups

## Doist

Hosts updates:

    {
        echo "127.0.0.1   elasticmq.local redis.local"
        echo "127.0.0.1   local.todoist.com local.twist.com local.mailhog.com"
    } | sudo tee -a /etc/hosts

Use dev CA for local.todoist.com:

    sudo trust anchor --store path/to/ide-tools/traefik/ssl/rootCA.pem

## GitHub CLI

    sudo dnf install 'dnf-command(config-manager)'
    sudo dnf config-manager \
        --add-repo https://cli.github.com/packages/rpm/gh-cli.repo
    sudo dnf install gh
