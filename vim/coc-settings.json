{
  "coc.preferences.extensionUpdateCheck": "weekly",

  // :h coc-config-suggest
  // First TAB causes the popup to show. Following TABs cycle through the
  // options. Although this is not the default, this is what I was used to and
  // the new behaviour is conter intuitive to me.
  "suggest.noselect": true,

  "suggest.selection": "first", // "recentlyUsed", "recentlyUsedByPrefix"
  "suggest.formatItems": ["abbr","menu","kind","shortcut"],
  "suggest.enablePreselect": true,
  "suggest.autoTrigger": "always",
  "suggest.fixInsertedWord": true,
  "suggest.removeDuplicateItems": true,
  "suggest.defaultSortMethod": "length", // "alphabetical", "none",
  "suggest.completionItemKindLabels": {
    "keyword": "\uf1de",
    "variable": "\ue79b",
    "value": "\uf89f",
    "operator": "\u03a8",
    "constructor": "\uf0ad",
    "function": "\u0192",
    "reference": "\ufa46",
    "constant": "\uf8fe",
    "method": "\uf09a",
    "struct": "\ufb44",
    "class": "\uf0e8",
    "interface": "\uf417",
    "text": "\ue612",
    "enum": "\uf435",
    "enumMember": "\uf02b",
    "module": "\uf40d",
    "color": "\ue22b",
    "property": "\ue624",
    "field": "\uf9be",
    "unit": "\uf475",
    "event": "\ufacd",
    "file": "\uf723",
    "folder": "\uf114",
    "snippet": "\ue60b",
    "typeParameter": "\uf728",
    "default": "\uf29c"
  },

  // Use Jedi when node 12 is not available
  "pyright.enable": true,
  "jedi.enable": false,

  "python.analysis.typeCheckingMode": "off",

  "python.linting.enabled": false,
  // These are installed globally so I don't have to install in each virtual env
  "python.linting.pylintEnabled": false,
  "python.linting.pylintPath": "/usr/bin/pylint-3",
  "python.linting.flake8Enabled": true,
  "python.linting.flake8Path": "/usr/bin/flake8",

  // "python.formatting.provider": "yapf",
  // "python.formatting.yapfPath": "/usr/bin/yapf",
  "python.formatting.provider": "black",
  "python.formatting.blackPath": "/usr/bin/black",

  "pyright.inlayHints.variableTypes": false,
  "pyright.inlayHints.functionReturnTypes": false,

  // See coc-tserver for `tserver`, `typescript`, and `javascript` keys:
  // https://github.com/neoclide/coc-tsserver#configuration-options

  // ALE does better *async* diagnostics at least for python
  "diagnostic.displayByAle": true,
  "diagnostic.enable": true,

  "signature.enable": true,
  "signature.target": "float",
  "signature.preferShownAbove": true,
  "signature.hideOnTextChange": false,
  "signature.triggerSignatureWait": 800,

  "snippets.userSnippetsDirectory": "~/.vim/ultisnips",
  "snippets.ultisnips.enable": true,
  "snippets.snipmate.enable": false,

  "tsserver.enable": true,
  "tsserver.formatOnType": true,
  "tsserver.enableJavascript": true,
  "tsserver.log": "off",
  "tsserver.trace.server": "off",
  "tsserver.reportStyleChecksAsWarnings": true,
  "tsserver.implicitProjectConfig.checkJs": false,
  "tsserver.implicitProjectConfig.experimentalDecorators": false,
  "tsserver.disableAutomaticTypeAcquisition": false,
  "tsserver.useBatchedBufferSync": true,
  "tsserver.enableTracing": false,

  "typescript.updateImportsOnFileMove.enable": true,
  "typescript.implementationsCodeLens.enable": true,
  "typescript.referencesCodeLens.enable": true,
  "typescript.referencesCodeLens.showOnAllFunctions": false,
  "typescript.preferences.importModuleSpecifier": "shortest",
  "typescript.preferences.importModuleSpecifierEnding": "auto",
  "typescript.preferences.quoteStyle": "single",
  "typescript.preferences.includePackageJsonAutoImports": "auto",
  "typescript.suggestionActions.enabled": true,
  "typescript.validate.enable": true,
  "typescript.showUnused": true,
  "typescript.autoClosingTags": true,

  "typescript.suggest.enabled": true,
  "typescript.suggest.paths": true,
  "typescript.suggest.autoImports": true,
  "typescript.suggest.completeFunctionCalls": true,
  "typescript.suggest.includeCompletionsForImportStatements": true,
  "typescript.suggest.includeCompletionsWithSnippetText": true,
  "typescript.suggest.classMemberSnippets.enabled": true,
  "typescript.suggest.jsdoc.generateReturns": true,
  "typescript.suggest.includeAutomaticOptionalChainCompletions": true,

  "typescript.format.enabled": true,
  "typescript.format.insertSpaceAfterCommaDelimiter": true,
  "typescript.format.insertSpaceAfterConstructor": false,
  "typescript.format.insertSpaceAfterSemicolonInForStatements": true,
  "typescript.format.insertSpaceBeforeAndAfterBinaryOperators": true,
  "typescript.format.insertSpaceAfterKeywordsInControlFlowStatements": true,
  "typescript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": true,
  "typescript.format.insertSpaceBeforeFunctionParenthesis": false,
  "typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": false,
  "typescript.format.insertSpaceAfterOpeningAndBeforeClosingEmptyBraces": false,
  "typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces": false,
  "typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": false,
  "typescript.format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces": false,
  "typescript.format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces": false,
  "typescript.format.insertSpaceAfterTypeAssertion": false,
  "typescript.format.placeOpenBraceOnNewLineForFunctions": false,
  "typescript.format.placeOpenBraceOnNewLineForControlBlocks": false,

  "javascript.format.enabled": true,
  "javascript.showUnused":  true,
  "javascript.autoClosingTags": true,
  "javascript.updateImportsOnFileMove.enable": true,
  "javascript.implementationsCodeLens.enable": true,
  "javascript.referencesCodeLens.enable": true,
  "javascript.referencesCodeLens.showOnAllFunctions":  false,
  "javascript.preferences.importModuleSpecifier": "shortest",
  "javascript.preferences.importModuleSpecifierEnding": "auto",
  "javascript.preferences.quoteStyle": "single",
  "javascript.validate.enable":  true,
  "javascript.suggestionActions.enabled":  true,

  "javascript.suggest.names": true,
  "javascript.suggest.enabled": true,
  "javascript.suggest.paths":  true,
  "javascript.suggest.autoImports":  true,
  "javascript.suggest.completeFunctionCalls": true,
  "javascript.suggest.includeCompletionsForImportStatements":  true,
  "javascript.suggest.jsdoc.generateReturns": true,
  "javascript.suggest.classMemberSnippets.enabled":  true,
  "javascript.suggest.includeAutomaticOptionalChainCompletions": true,

  "javascript.format.insertSpaceAfterCommaDelimiter": true,
  "javascript.format.insertSpaceAfterConstructor": false,
  "javascript.format.insertSpaceAfterSemicolonInForStatements": true,
  "javascript.format.insertSpaceBeforeAndAfterBinaryOperators": true,
  "javascript.format.insertSpaceAfterKeywordsInControlFlowStatements": true,
  "javascript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": true,
  "javascript.format.insertSpaceBeforeFunctionParenthesis": false,
  "javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": false,
  "javascript.format.insertSpaceAfterOpeningAndBeforeClosingEmptyBraces": false,
  "javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces": false,
  "javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": false,
  "javascript.format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces": false,
  "javascript.format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces": false,
  "javascript.format.insertSpaceAfterTypeAssertion": false,
  "javascript.format.placeOpenBraceOnNewLineForFunctions": false,
  "javascript.format.placeOpenBraceOnNewLineForControlBlocks": false
}

// vim: ft=jsonc
